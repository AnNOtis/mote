$ ./run.rb 1 10000
10000 Iterations
Rehearsal ---------------------------------------------------
(1) erb           7.550000   0.040000   7.590000 (  7.645458)
(1) erubis        6.600000   0.020000   6.620000 (  6.646500)
(1) fast erubis   6.690000   0.030000   6.720000 (  6.776431)
(1) slim         77.470000   1.440000  78.910000 ( 79.655523)
(1) haml         54.450000   0.200000  54.650000 ( 54.660592)
(1) haml ugly    52.820000   0.200000  53.020000 ( 53.098301)
(1) mote          4.270000   0.010000   4.280000 (  4.289390)
(2) erb           2.590000   0.010000   2.600000 (  2.594577)
(2) erubis        2.110000   0.000000   2.110000 (  2.115044)
(2) fast erubis   1.850000   0.010000   1.860000 (  1.850566)
(2) slim          0.660000   0.000000   0.660000 (  0.662478)
(2) haml          5.900000   0.020000   5.920000 (  5.916103)
(2) haml ugly     5.060000   0.020000   5.080000 (  5.068127)
(3) erb           0.440000   0.000000   0.440000 (  0.435654)
(3) erubis        0.370000   0.000000   0.370000 (  0.367872)
(3) fast erubis   0.390000   0.000000   0.390000 (  0.392637)
(3) slim          0.500000   0.000000   0.500000 (  0.503522)
(3) haml          2.180000   0.010000   2.190000 (  2.190485)
(3) haml ugly     1.940000   0.000000   1.940000 (  1.948182)
(3) mote          0.190000   0.000000   0.190000 (  0.188114)
(4) erb           0.600000   0.010000   0.610000 (  0.594487)
(4) erubis        0.520000   0.000000   0.520000 (  0.527749)
(4) slim          0.670000   0.000000   0.670000 (  0.669895)
(4) haml          2.470000   0.000000   2.470000 (  2.466641)
(4) haml ugly     2.240000   0.010000   2.250000 (  2.249450)
---------------------------------------- total: 242.560000sec

                      user     system      total        real
(1) erb           7.600000   0.030000   7.630000 (  7.699662)
(1) erubis        6.830000   0.040000   6.870000 (  7.023840)
(1) fast erubis   6.690000   0.030000   6.720000 (  6.831912)
(1) slim         78.170000   1.470000  79.640000 ( 80.320053)
(1) haml         55.630000   0.210000  55.840000 ( 56.312222)
(1) haml ugly    55.000000   0.320000  55.320000 ( 56.246786)
(1) mote          4.560000   0.030000   4.590000 (  4.697679)
(2) erb           2.720000   0.020000   2.740000 (  2.787553)
(2) erubis        2.240000   0.020000   2.260000 (  2.308526)
(2) fast erubis   1.930000   0.010000   1.940000 (  1.968935)
(2) slim          0.700000   0.000000   0.700000 (  0.715572)
(2) haml          6.130000   0.030000   6.160000 (  6.206144)
(2) haml ugly     5.290000   0.040000   5.330000 (  5.433219)
(3) erb           0.490000   0.000000   0.490000 (  0.512466)
(3) erubis        0.390000   0.000000   0.390000 (  0.385714)
(3) fast erubis   0.400000   0.010000   0.410000 (  0.396968)
(3) slim          0.510000   0.000000   0.510000 (  0.509067)
(3) haml          2.290000   0.010000   2.300000 (  2.324572)
(3) haml ugly     2.070000   0.010000   2.080000 (  2.129705)
(3) mote          0.200000   0.000000   0.200000 (  0.227739)
(4) erb           0.610000   0.010000   0.620000 (  0.626832)
(4) erubis        0.540000   0.000000   0.540000 (  0.543317)
(4) slim          0.680000   0.000000   0.680000 (  0.715544)
(4) haml          2.640000   0.030000   2.670000 (  2.749645)
(4) haml ugly     2.330000   0.010000   2.340000 (  2.367762)

1. Uncached benchmark. Template is parsed every time.
   Activate this benchmark with slow=1.

2. Cached benchmark. Template is parsed before the benchmark.
   The ruby code generated by the template engine might be evaluated every time.
   This benchmark uses the standard API of the template engine.

3. Compiled benchmark. Template is parsed before the benchmark and
   generated ruby code is compiled into a method.
   This is the fastest evaluation strategy because it benchmarks
   pure execution speed of the generated ruby code.

4. Compiled Tilt benchmark. Template is compiled with Tilt, which gives a more
   accurate result of the performance in production mode in frameworks like
   Sinatra, Ramaze and Camping. (Rails still uses its own template
   compilation.)
